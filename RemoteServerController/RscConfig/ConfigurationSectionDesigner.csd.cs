//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RscConfig
{
    
    
    /// <summary>
    /// The StaticConfiguration Configuration Section.
    /// </summary>
    public partial class StaticConfiguration : global::System.Configuration.ConfigurationSection
    {
        
        #region Singleton Instance
        /// <summary>
        /// The XML name of the StaticConfiguration Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        internal const string StaticConfigurationSectionName = "staticConfiguration";
        
        /// <summary>
        /// The XML path of the StaticConfiguration Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        internal const string StaticConfigurationSectionPath = "staticConfiguration";
        
        /// <summary>
        /// Gets the StaticConfiguration instance.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        public static global::RscConfig.StaticConfiguration Instance
        {
            get
            {
                return ((global::RscConfig.StaticConfiguration)(global::System.Configuration.ConfigurationManager.GetSection(global::RscConfig.StaticConfiguration.StaticConfigurationSectionPath)));
            }
        }
        #endregion
        
        #region Xmlns Property
        /// <summary>
        /// The XML name of the <see cref="Xmlns"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        internal const string XmlnsPropertyName = "xmlns";
        
        /// <summary>
        /// Gets the XML namespace of this Configuration Section.
        /// </summary>
        /// <remarks>
        /// This property makes sure that if the configuration file contains the XML namespace,
        /// the parser doesn't throw an exception because it encounters the unknown "xmlns" attribute.
        /// </remarks>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::RscConfig.StaticConfiguration.XmlnsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string Xmlns
        {
            get
            {
                return ((string)(base[global::RscConfig.StaticConfiguration.XmlnsPropertyName]));
            }
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region General Property
        /// <summary>
        /// The XML name of the <see cref="General"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        internal const string GeneralPropertyName = "general";
        
        /// <summary>
        /// Gets the General.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        [global::System.ComponentModel.DescriptionAttribute("The General.")]
        [global::System.ComponentModel.ReadOnlyAttribute(true)]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::RscConfig.StaticConfiguration.GeneralPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::RscConfig.General General
        {
            get
            {
                return ((global::RscConfig.General)(base[global::RscConfig.StaticConfiguration.GeneralPropertyName]));
            }
        }
        #endregion
        
        #region Network Property
        /// <summary>
        /// The XML name of the <see cref="Network"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        internal const string NetworkPropertyName = "network";
        
        /// <summary>
        /// Gets the Network.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        [global::System.ComponentModel.DescriptionAttribute("The Network.")]
        [global::System.ComponentModel.ReadOnlyAttribute(true)]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::RscConfig.StaticConfiguration.NetworkPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::RscConfig.Network Network
        {
            get
            {
                return ((global::RscConfig.Network)(base[global::RscConfig.StaticConfiguration.NetworkPropertyName]));
            }
        }
        #endregion
    }
}
namespace RscConfig
{
    
    
    /// <summary>
    /// The DynamicConfiguration Configuration Section.
    /// </summary>
    public partial class DynamicConfiguration : global::System.Configuration.ConfigurationSection
    {
        
        #region Singleton Instance
        /// <summary>
        /// The XML name of the DynamicConfiguration Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        internal const string DynamicConfigurationSectionName = "dynamicConfiguration";
        
        /// <summary>
        /// The XML path of the DynamicConfiguration Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        internal const string DynamicConfigurationSectionPath = "dynamicConfiguration";
        
        /// <summary>
        /// Gets the DynamicConfiguration instance.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        public static global::RscConfig.DynamicConfiguration Instance
        {
            get
            {
                return ((global::RscConfig.DynamicConfiguration)(global::System.Configuration.ConfigurationManager.GetSection(global::RscConfig.DynamicConfiguration.DynamicConfigurationSectionPath)));
            }
        }
        #endregion
        
        #region Xmlns Property
        /// <summary>
        /// The XML name of the <see cref="Xmlns"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        internal const string XmlnsPropertyName = "xmlns";
        
        /// <summary>
        /// Gets the XML namespace of this Configuration Section.
        /// </summary>
        /// <remarks>
        /// This property makes sure that if the configuration file contains the XML namespace,
        /// the parser doesn't throw an exception because it encounters the unknown "xmlns" attribute.
        /// </remarks>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::RscConfig.DynamicConfiguration.XmlnsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string Xmlns
        {
            get
            {
                return ((string)(base[global::RscConfig.DynamicConfiguration.XmlnsPropertyName]));
            }
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Service Property
        /// <summary>
        /// The XML name of the <see cref="Service"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        internal const string ServicePropertyName = "service";
        
        /// <summary>
        /// Gets the Service.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        [global::System.ComponentModel.DescriptionAttribute("The Service.")]
        [global::System.ComponentModel.ReadOnlyAttribute(true)]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::RscConfig.DynamicConfiguration.ServicePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::RscConfig.Service Service
        {
            get
            {
                return ((global::RscConfig.Service)(base[global::RscConfig.DynamicConfiguration.ServicePropertyName]));
            }
        }
        #endregion
        
        #region Security Property
        /// <summary>
        /// The XML name of the <see cref="Security"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        internal const string SecurityPropertyName = "security";
        
        /// <summary>
        /// Gets the Security.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        [global::System.ComponentModel.DescriptionAttribute("The Security.")]
        [global::System.ComponentModel.ReadOnlyAttribute(true)]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::RscConfig.DynamicConfiguration.SecurityPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::RscConfig.Security Security
        {
            get
            {
                return ((global::RscConfig.Security)(base[global::RscConfig.DynamicConfiguration.SecurityPropertyName]));
            }
        }
        #endregion
    }
}
namespace RscConfig
{
    
    
    /// <summary>
    /// The General Configuration Element.
    /// </summary>
    public partial class General : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region QuitToken Property
        /// <summary>
        /// The XML name of the <see cref="QuitToken"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        internal const string QuitTokenPropertyName = "quitToken";
        
        /// <summary>
        /// Gets the QuitToken.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        [global::System.ComponentModel.DescriptionAttribute("The QuitToken.")]
        [global::System.ComponentModel.ReadOnlyAttribute(true)]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::RscConfig.General.QuitTokenPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual string QuitToken
        {
            get
            {
                return ((string)(base[global::RscConfig.General.QuitTokenPropertyName]));
            }
        }
        #endregion
    }
}
namespace RscConfig
{
    
    
    /// <summary>
    /// The Network Configuration Element.
    /// </summary>
    public partial class Network : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Host Property
        /// <summary>
        /// The XML name of the <see cref="Host"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        internal const string HostPropertyName = "host";
        
        /// <summary>
        /// Gets the Host.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        [global::System.ComponentModel.DescriptionAttribute("The Host.")]
        [global::System.ComponentModel.ReadOnlyAttribute(true)]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::RscConfig.Network.HostPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual string Host
        {
            get
            {
                return ((string)(base[global::RscConfig.Network.HostPropertyName]));
            }
        }
        #endregion
        
        #region Port Property
        /// <summary>
        /// The XML name of the <see cref="Port"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        internal const string PortPropertyName = "port";
        
        /// <summary>
        /// Gets the Port.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        [global::System.ComponentModel.DescriptionAttribute("The Port.")]
        [global::System.ComponentModel.ReadOnlyAttribute(true)]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::RscConfig.Network.PortPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual int Port
        {
            get
            {
                return ((int)(base[global::RscConfig.Network.PortPropertyName]));
            }
        }
        #endregion
        
        #region UseSSL Property
        /// <summary>
        /// The XML name of the <see cref="UseSSL"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        internal const string UseSSLPropertyName = "useSSL";
        
        /// <summary>
        /// Gets the UseSSL.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        [global::System.ComponentModel.DescriptionAttribute("The UseSSL.")]
        [global::System.ComponentModel.ReadOnlyAttribute(true)]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::RscConfig.Network.UseSSLPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false, DefaultValue=false)]
        public virtual bool UseSSL
        {
            get
            {
                return ((bool)(base[global::RscConfig.Network.UseSSLPropertyName]));
            }
        }
        #endregion
        
        #region CertificateThumbprint Property
        /// <summary>
        /// The XML name of the <see cref="CertificateThumbprint"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        internal const string CertificateThumbprintPropertyName = "certificateThumbprint";
        
        /// <summary>
        /// Gets the CertificateThumbprint.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        [global::System.ComponentModel.DescriptionAttribute("The CertificateThumbprint.")]
        [global::System.ComponentModel.ReadOnlyAttribute(true)]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::RscConfig.Network.CertificateThumbprintPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string CertificateThumbprint
        {
            get
            {
                return ((string)(base[global::RscConfig.Network.CertificateThumbprintPropertyName]));
            }
        }
        #endregion
        
        #region CrossDomainScriptAccessEnabled Property
        /// <summary>
        /// The XML name of the <see cref="CrossDomainScriptAccessEnabled"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        internal const string CrossDomainScriptAccessEnabledPropertyName = "crossDomainScriptAccessEnabled";
        
        /// <summary>
        /// Gets the CrossDomainScriptAccessEnabled.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        [global::System.ComponentModel.DescriptionAttribute("The CrossDomainScriptAccessEnabled.")]
        [global::System.ComponentModel.ReadOnlyAttribute(true)]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::RscConfig.Network.CrossDomainScriptAccessEnabledPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false, DefaultValue=true)]
        public virtual bool CrossDomainScriptAccessEnabled
        {
            get
            {
                return ((bool)(base[global::RscConfig.Network.CrossDomainScriptAccessEnabledPropertyName]));
            }
        }
        #endregion
    }
}
namespace RscConfig
{
    
    
    /// <summary>
    /// The Service Configuration Element.
    /// </summary>
    public partial class Service : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region StatusChangeTimeout Property
        /// <summary>
        /// The XML name of the <see cref="StatusChangeTimeout"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        internal const string StatusChangeTimeoutPropertyName = "statusChangeTimeout";
        
        /// <summary>
        /// Gets the StatusChangeTimeout.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        [global::System.ComponentModel.DescriptionAttribute("The StatusChangeTimeout.")]
        [global::System.ComponentModel.ReadOnlyAttribute(true)]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::RscConfig.Service.StatusChangeTimeoutPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false, DefaultValue=5000)]
        public virtual int StatusChangeTimeout
        {
            get
            {
                return ((int)(base[global::RscConfig.Service.StatusChangeTimeoutPropertyName]));
            }
        }
        #endregion
        
        #region AllowedServiceCollection Property
        /// <summary>
        /// The XML name of the <see cref="AllowedServiceCollection"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        internal const string AllowedServiceCollectionPropertyName = "allowedServiceCollection";
        
        /// <summary>
        /// Gets the AllowedServiceCollection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        [global::System.ComponentModel.DescriptionAttribute("The AllowedServiceCollection.")]
        [global::System.ComponentModel.ReadOnlyAttribute(true)]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::RscConfig.Service.AllowedServiceCollectionPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::RscConfig.AllowedServiceCollection AllowedServiceCollection
        {
            get
            {
                return ((global::RscConfig.AllowedServiceCollection)(base[global::RscConfig.Service.AllowedServiceCollectionPropertyName]));
            }
        }
        #endregion
    }
}
namespace RscConfig
{
    
    
    /// <summary>
    /// A collection of AllowedService instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::RscConfig.AllowedService), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName=global::RscConfig.AllowedServiceCollection.AllowedServicePropertyName)]
    public partial class AllowedServiceCollection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::RscConfig.AllowedService"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        internal const string AllowedServicePropertyName = "allowedService";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        protected override string ElementName
        {
            get
            {
                return global::RscConfig.AllowedServiceCollection.AllowedServicePropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::RscConfig.AllowedServiceCollection.AllowedServicePropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::RscConfig.AllowedService)(element)).Name;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::RscConfig.AllowedService"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::RscConfig.AllowedService"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::RscConfig.AllowedService();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::RscConfig.AllowedService"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::RscConfig.AllowedService"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        public global::RscConfig.AllowedService this[int index]
        {
            get
            {
                return ((global::RscConfig.AllowedService)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::RscConfig.AllowedService"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::RscConfig.AllowedService"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        public global::RscConfig.AllowedService this[object name]
        {
            get
            {
                return ((global::RscConfig.AllowedService)(base.BaseGet(name)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::RscConfig.AllowedService"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="allowedService">The <see cref="global::RscConfig.AllowedService"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        public void Add(global::RscConfig.AllowedService allowedService)
        {
            base.BaseAdd(allowedService);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::RscConfig.AllowedService"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="allowedService">The <see cref="global::RscConfig.AllowedService"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        public void Remove(global::RscConfig.AllowedService allowedService)
        {
            base.BaseRemove(this.GetElementKey(allowedService));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::RscConfig.AllowedService"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::RscConfig.AllowedService"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        public global::RscConfig.AllowedService GetItemAt(int index)
        {
            return ((global::RscConfig.AllowedService)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::RscConfig.AllowedService"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::RscConfig.AllowedService"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        public global::RscConfig.AllowedService GetItemByKey(string name)
        {
            return ((global::RscConfig.AllowedService)(base.BaseGet(((object)(name)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace RscConfig
{
    
    
    /// <summary>
    /// The AllowedService Configuration Element.
    /// </summary>
    public partial class AllowedService : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Name Property
        /// <summary>
        /// The XML name of the <see cref="Name"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        internal const string NamePropertyName = "name";
        
        /// <summary>
        /// Gets the Name.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        [global::System.ComponentModel.DescriptionAttribute("The Name.")]
        [global::System.ComponentModel.ReadOnlyAttribute(true)]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::RscConfig.AllowedService.NamePropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string Name
        {
            get
            {
                return ((string)(base[global::RscConfig.AllowedService.NamePropertyName]));
            }
        }
        #endregion
        
        #region SecurityProfile Property
        /// <summary>
        /// The XML name of the <see cref="SecurityProfile"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        internal const string SecurityProfilePropertyName = "securityProfile";
        
        /// <summary>
        /// Gets the SecurityProfile.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        [global::System.ComponentModel.DescriptionAttribute("The SecurityProfile.")]
        [global::System.ComponentModel.ReadOnlyAttribute(true)]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::RscConfig.AllowedService.SecurityProfilePropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual string SecurityProfile
        {
            get
            {
                return ((string)(base[global::RscConfig.AllowedService.SecurityProfilePropertyName]));
            }
        }
        #endregion
        
        #region AllowStart Property
        /// <summary>
        /// The XML name of the <see cref="AllowStart"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        internal const string AllowStartPropertyName = "allowStart";
        
        /// <summary>
        /// Gets the AllowStart.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        [global::System.ComponentModel.DescriptionAttribute("The AllowStart.")]
        [global::System.ComponentModel.ReadOnlyAttribute(true)]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::RscConfig.AllowedService.AllowStartPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual bool AllowStart
        {
            get
            {
                return ((bool)(base[global::RscConfig.AllowedService.AllowStartPropertyName]));
            }
        }
        #endregion
        
        #region AllowStop Property
        /// <summary>
        /// The XML name of the <see cref="AllowStop"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        internal const string AllowStopPropertyName = "allowStop";
        
        /// <summary>
        /// Gets the AllowStop.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        [global::System.ComponentModel.DescriptionAttribute("The AllowStop.")]
        [global::System.ComponentModel.ReadOnlyAttribute(true)]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::RscConfig.AllowedService.AllowStopPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual bool AllowStop
        {
            get
            {
                return ((bool)(base[global::RscConfig.AllowedService.AllowStopPropertyName]));
            }
        }
        #endregion
        
        #region AllowStatusCheck Property
        /// <summary>
        /// The XML name of the <see cref="AllowStatusCheck"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        internal const string AllowStatusCheckPropertyName = "allowStatusCheck";
        
        /// <summary>
        /// Gets the AllowStatusCheck.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        [global::System.ComponentModel.DescriptionAttribute("The AllowStatusCheck.")]
        [global::System.ComponentModel.ReadOnlyAttribute(true)]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::RscConfig.AllowedService.AllowStatusCheckPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual bool AllowStatusCheck
        {
            get
            {
                return ((bool)(base[global::RscConfig.AllowedService.AllowStatusCheckPropertyName]));
            }
        }
        #endregion
    }
}
namespace RscConfig
{
    
    
    /// <summary>
    /// The Security Configuration Element.
    /// </summary>
    public partial class Security : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region SecurityProfileCollection Property
        /// <summary>
        /// The XML name of the <see cref="SecurityProfileCollection"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        internal const string SecurityProfileCollectionPropertyName = "securityProfileCollection";
        
        /// <summary>
        /// Gets the SecurityProfileCollection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        [global::System.ComponentModel.DescriptionAttribute("The SecurityProfileCollection.")]
        [global::System.ComponentModel.ReadOnlyAttribute(true)]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::RscConfig.Security.SecurityProfileCollectionPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::RscConfig.SecurityProfileCollection SecurityProfileCollection
        {
            get
            {
                return ((global::RscConfig.SecurityProfileCollection)(base[global::RscConfig.Security.SecurityProfileCollectionPropertyName]));
            }
        }
        #endregion
    }
}
namespace RscConfig
{
    
    
    /// <summary>
    /// A collection of SecurityProfile instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::RscConfig.SecurityProfile), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName=global::RscConfig.SecurityProfileCollection.SecurityProfilePropertyName)]
    public partial class SecurityProfileCollection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::RscConfig.SecurityProfile"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        internal const string SecurityProfilePropertyName = "securityProfile";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        protected override string ElementName
        {
            get
            {
                return global::RscConfig.SecurityProfileCollection.SecurityProfilePropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::RscConfig.SecurityProfileCollection.SecurityProfilePropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::RscConfig.SecurityProfile)(element)).Name;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::RscConfig.SecurityProfile"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::RscConfig.SecurityProfile"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::RscConfig.SecurityProfile();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::RscConfig.SecurityProfile"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::RscConfig.SecurityProfile"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        public global::RscConfig.SecurityProfile this[int index]
        {
            get
            {
                return ((global::RscConfig.SecurityProfile)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::RscConfig.SecurityProfile"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::RscConfig.SecurityProfile"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        public global::RscConfig.SecurityProfile this[object name]
        {
            get
            {
                return ((global::RscConfig.SecurityProfile)(base.BaseGet(name)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::RscConfig.SecurityProfile"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="securityProfile">The <see cref="global::RscConfig.SecurityProfile"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        public void Add(global::RscConfig.SecurityProfile securityProfile)
        {
            base.BaseAdd(securityProfile);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::RscConfig.SecurityProfile"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="securityProfile">The <see cref="global::RscConfig.SecurityProfile"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        public void Remove(global::RscConfig.SecurityProfile securityProfile)
        {
            base.BaseRemove(this.GetElementKey(securityProfile));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::RscConfig.SecurityProfile"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::RscConfig.SecurityProfile"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        public global::RscConfig.SecurityProfile GetItemAt(int index)
        {
            return ((global::RscConfig.SecurityProfile)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::RscConfig.SecurityProfile"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::RscConfig.SecurityProfile"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        public global::RscConfig.SecurityProfile GetItemByKey(string name)
        {
            return ((global::RscConfig.SecurityProfile)(base.BaseGet(((object)(name)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace RscConfig
{
    
    
    /// <summary>
    /// The SecurityProfile Configuration Element.
    /// </summary>
    public partial class SecurityProfile : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Name Property
        /// <summary>
        /// The XML name of the <see cref="Name"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        internal const string NamePropertyName = "name";
        
        /// <summary>
        /// Gets the Name.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        [global::System.ComponentModel.DescriptionAttribute("The Name.")]
        [global::System.ComponentModel.ReadOnlyAttribute(true)]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::RscConfig.SecurityProfile.NamePropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string Name
        {
            get
            {
                return ((string)(base[global::RscConfig.SecurityProfile.NamePropertyName]));
            }
        }
        #endregion
        
        #region CheckAPIKey Property
        /// <summary>
        /// The XML name of the <see cref="CheckAPIKey"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        internal const string CheckAPIKeyPropertyName = "checkAPIKey";
        
        /// <summary>
        /// Gets the CheckAPIKey.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        [global::System.ComponentModel.DescriptionAttribute("The CheckAPIKey.")]
        [global::System.ComponentModel.ReadOnlyAttribute(true)]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::RscConfig.SecurityProfile.CheckAPIKeyPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual bool CheckAPIKey
        {
            get
            {
                return ((bool)(base[global::RscConfig.SecurityProfile.CheckAPIKeyPropertyName]));
            }
        }
        #endregion
        
        #region CheckIPAddress Property
        /// <summary>
        /// The XML name of the <see cref="CheckIPAddress"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        internal const string CheckIPAddressPropertyName = "checkIPAddress";
        
        /// <summary>
        /// Gets the CheckIPAddress.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        [global::System.ComponentModel.DescriptionAttribute("The CheckIPAddress.")]
        [global::System.ComponentModel.ReadOnlyAttribute(true)]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::RscConfig.SecurityProfile.CheckIPAddressPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual bool CheckIPAddress
        {
            get
            {
                return ((bool)(base[global::RscConfig.SecurityProfile.CheckIPAddressPropertyName]));
            }
        }
        #endregion
        
        #region AllowedAPIKeyCollection Property
        /// <summary>
        /// The XML name of the <see cref="AllowedAPIKeyCollection"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        internal const string AllowedAPIKeyCollectionPropertyName = "allowedAPIKeyCollection";
        
        /// <summary>
        /// Gets the AllowedAPIKeyCollection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        [global::System.ComponentModel.DescriptionAttribute("The AllowedAPIKeyCollection.")]
        [global::System.ComponentModel.ReadOnlyAttribute(true)]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::RscConfig.SecurityProfile.AllowedAPIKeyCollectionPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::RscConfig.AllowedAPIKeyCollection AllowedAPIKeyCollection
        {
            get
            {
                return ((global::RscConfig.AllowedAPIKeyCollection)(base[global::RscConfig.SecurityProfile.AllowedAPIKeyCollectionPropertyName]));
            }
        }
        #endregion
        
        #region AllowedIPCollection Property
        /// <summary>
        /// The XML name of the <see cref="AllowedIPCollection"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        internal const string AllowedIPCollectionPropertyName = "allowedIPCollection";
        
        /// <summary>
        /// Gets the AllowedIPCollection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        [global::System.ComponentModel.DescriptionAttribute("The AllowedIPCollection.")]
        [global::System.ComponentModel.ReadOnlyAttribute(true)]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::RscConfig.SecurityProfile.AllowedIPCollectionPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::RscConfig.AllowedIPCollection AllowedIPCollection
        {
            get
            {
                return ((global::RscConfig.AllowedIPCollection)(base[global::RscConfig.SecurityProfile.AllowedIPCollectionPropertyName]));
            }
        }
        #endregion
    }
}
namespace RscConfig
{
    
    
    /// <summary>
    /// A collection of AllowedAPIKey instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::RscConfig.AllowedAPIKey), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName=global::RscConfig.AllowedAPIKeyCollection.AllowedAPIKeyPropertyName)]
    public partial class AllowedAPIKeyCollection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::RscConfig.AllowedAPIKey"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        internal const string AllowedAPIKeyPropertyName = "allowedAPIKey";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        protected override string ElementName
        {
            get
            {
                return global::RscConfig.AllowedAPIKeyCollection.AllowedAPIKeyPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::RscConfig.AllowedAPIKeyCollection.AllowedAPIKeyPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::RscConfig.AllowedAPIKey)(element)).Value;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::RscConfig.AllowedAPIKey"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::RscConfig.AllowedAPIKey"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::RscConfig.AllowedAPIKey();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::RscConfig.AllowedAPIKey"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::RscConfig.AllowedAPIKey"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        public global::RscConfig.AllowedAPIKey this[int index]
        {
            get
            {
                return ((global::RscConfig.AllowedAPIKey)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::RscConfig.AllowedAPIKey"/> with the specified key.
        /// </summary>
        /// <param name="value">The key of the <see cref="global::RscConfig.AllowedAPIKey"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        public global::RscConfig.AllowedAPIKey this[object value]
        {
            get
            {
                return ((global::RscConfig.AllowedAPIKey)(base.BaseGet(value)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::RscConfig.AllowedAPIKey"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="allowedAPIKey">The <see cref="global::RscConfig.AllowedAPIKey"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        public void Add(global::RscConfig.AllowedAPIKey allowedAPIKey)
        {
            base.BaseAdd(allowedAPIKey);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::RscConfig.AllowedAPIKey"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="allowedAPIKey">The <see cref="global::RscConfig.AllowedAPIKey"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        public void Remove(global::RscConfig.AllowedAPIKey allowedAPIKey)
        {
            base.BaseRemove(this.GetElementKey(allowedAPIKey));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::RscConfig.AllowedAPIKey"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::RscConfig.AllowedAPIKey"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        public global::RscConfig.AllowedAPIKey GetItemAt(int index)
        {
            return ((global::RscConfig.AllowedAPIKey)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::RscConfig.AllowedAPIKey"/> with the specified key.
        /// </summary>
        /// <param name="value">The key of the <see cref="global::RscConfig.AllowedAPIKey"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        public global::RscConfig.AllowedAPIKey GetItemByKey(string value)
        {
            return ((global::RscConfig.AllowedAPIKey)(base.BaseGet(((object)(value)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace RscConfig
{
    
    
    /// <summary>
    /// The AllowedAPIKey Configuration Element.
    /// </summary>
    public partial class AllowedAPIKey : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Value Property
        /// <summary>
        /// The XML name of the <see cref="Value"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        internal const string ValuePropertyName = "value";
        
        /// <summary>
        /// Gets the Value.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        [global::System.ComponentModel.DescriptionAttribute("The Value.")]
        [global::System.ComponentModel.ReadOnlyAttribute(true)]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::RscConfig.AllowedAPIKey.ValuePropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string Value
        {
            get
            {
                return ((string)(base[global::RscConfig.AllowedAPIKey.ValuePropertyName]));
            }
        }
        #endregion
    }
}
namespace RscConfig
{
    
    
    /// <summary>
    /// The AllowedIP Configuration Element.
    /// </summary>
    public partial class AllowedIP : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Value Property
        /// <summary>
        /// The XML name of the <see cref="Value"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        internal const string ValuePropertyName = "value";
        
        /// <summary>
        /// Gets the Value.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        [global::System.ComponentModel.DescriptionAttribute("The Value.")]
        [global::System.ComponentModel.ReadOnlyAttribute(true)]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::RscConfig.AllowedIP.ValuePropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string Value
        {
            get
            {
                return ((string)(base[global::RscConfig.AllowedIP.ValuePropertyName]));
            }
        }
        #endregion
    }
}
namespace RscConfig
{
    
    
    /// <summary>
    /// A collection of AllowedIP instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::RscConfig.AllowedIP), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName=global::RscConfig.AllowedIPCollection.AllowedIPPropertyName)]
    public partial class AllowedIPCollection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::RscConfig.AllowedIP"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        internal const string AllowedIPPropertyName = "allowedIP";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        protected override string ElementName
        {
            get
            {
                return global::RscConfig.AllowedIPCollection.AllowedIPPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::RscConfig.AllowedIPCollection.AllowedIPPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::RscConfig.AllowedIP)(element)).Value;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::RscConfig.AllowedIP"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::RscConfig.AllowedIP"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::RscConfig.AllowedIP();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::RscConfig.AllowedIP"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::RscConfig.AllowedIP"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        public global::RscConfig.AllowedIP this[int index]
        {
            get
            {
                return ((global::RscConfig.AllowedIP)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::RscConfig.AllowedIP"/> with the specified key.
        /// </summary>
        /// <param name="value">The key of the <see cref="global::RscConfig.AllowedIP"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        public global::RscConfig.AllowedIP this[object value]
        {
            get
            {
                return ((global::RscConfig.AllowedIP)(base.BaseGet(value)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::RscConfig.AllowedIP"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="allowedIP">The <see cref="global::RscConfig.AllowedIP"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        public void Add(global::RscConfig.AllowedIP allowedIP)
        {
            base.BaseAdd(allowedIP);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::RscConfig.AllowedIP"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="allowedIP">The <see cref="global::RscConfig.AllowedIP"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        public void Remove(global::RscConfig.AllowedIP allowedIP)
        {
            base.BaseRemove(this.GetElementKey(allowedIP));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::RscConfig.AllowedIP"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::RscConfig.AllowedIP"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        public global::RscConfig.AllowedIP GetItemAt(int index)
        {
            return ((global::RscConfig.AllowedIP)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::RscConfig.AllowedIP"/> with the specified key.
        /// </summary>
        /// <param name="value">The key of the <see cref="global::RscConfig.AllowedIP"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        public global::RscConfig.AllowedIP GetItemByKey(string value)
        {
            return ((global::RscConfig.AllowedIP)(base.BaseGet(((object)(value)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.2")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
